<?xml version="1.0" ?>

<robot name="espeleo" xmlns:xacro="http://www.ros.org/wiki/xacro">


  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  <material name="brown">
    <color rgba="0.870588235294 0.811764705882 0.764705882353 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>

  <xacro:arg name="gpu" default="false"/>
  <xacro:property name="gpu" value="$(arg gpu)" />
  <xacro:include filename="$(find espeleo_gazebo)/urdf/VLP-16.urdf.xacro"/>
  <xacro:arg name="organize_cloud" default="false"/>
  <xacro:property name="organize_cloud" value="$(arg organize_cloud)" />
 
  <link name="base_link"/>

  <joint name="base_joint" type="fixed">
    <axis xyz="0 0 0"/>
    <origin rpy="0 0 0" xyz="0 0 .15"/>
    <parent link="base_link"/>
    <child link="chassis"/>
  </joint>


  <link name="chassis">


    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.54 0.27 0.145"/>
      </geometry>
    </collision>

    <visual>
      <origin rpy="-1.57079632679 0 0" xyz="-0.283 -0.23 0.0725"/>
      <geometry>
        <mesh filename="package://espeleo_description/urdf/stl/Espeleo-22.STL" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="white"/>
    </visual>

    <inertial>
      <origin rpy="1.57 0 0" xyz="-0. 0. 0."/>
      <mass value="20.0"/>
      <inertia ixx="1.4" ixy="0.03" ixz="-0.63" iyy="2.19" iyz="-.6" izz="0.89"/>
      <!--<inertia ixx=".040005110" ixy=".02001773" ixz="-0.00034131" iyy=".17086763" iyz="0.00466448" izz=".16009832"/>-->
      <!--inertia ixx=".5" ixy="0" ixz="0" iyy=".5" iyz="0" izz=".1"/-->
    </inertial>
  </link>


  <link name="left_front_wheel">

    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.043" radius="0.14"/>
      </geometry>
    </collision>

    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://espeleo_description/urdf/stl/roda_esquerda.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>

    <inertial>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <mass value="0.32"/>
      <!--inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/-->
      <!--inertia ixx="0.00895020" ixy="-0.00001" ixz="-0.000000" iyy="0.00895023" iyz="-0.000000" izz=".01758982"/-->
      <inertia ixx="0.012411765597" ixy="0" ixz="0" iyy="0.015218160428" iyz="0" izz="0.011763977943"/>
    </inertial>
  </link>
  
  <joint name="left_front_wheel_joint" type="continuous"> <!--type="revolute">-->
    <parent link="chassis"/>
    <child link="left_front_wheel"/>
    <origin rpy="0 0 0" xyz="0.215 0.175 -0.01"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <!--<limit command_effort="100" current="10" effort="80" gear_velocity="10" lower="-9.42" upper="9.42" velocity="15"/>-->
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>

  <transmission name="left_front_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_front_wheel_joint">
      <EffortJointInterface>EffortJointInterface</EffortJointInterface>
    </joint>
    <actuator name="left_frontMotor">
      <EffortJointInterface>EffortJointInterface</EffortJointInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>



  <link name="left_back_wheel">

    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.043" radius="0.14"/>
      </geometry>
    </collision>

    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://espeleo_description/urdf/stl/roda_esquerda.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>

    <inertial>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <mass value="0.32"/>
      <!--inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/-->
      <!--inertia ixx="0.00895020" ixy="-0.00001" ixz="-0.000000" iyy="0.00895023" iyz="-0.000000" izz=".01758982"/-->
      <inertia ixx="0.012411765597" ixy="0" ixz="0" iyy="0.015218160428" iyz="0" izz="0.011763977943"/>
    </inertial>
  </link>
  
  <joint name="left_back_wheel_joint" type="continuous"> <!--type="revolute">-->
    <parent link="chassis"/>
    <child link="left_back_wheel"/>
    <origin rpy="0 0 0" xyz="-0.212 0.175 -0.01"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <!--<limit command_effort="100" current="10" effort="80" gear_velocity="10" lower="-9.42" upper="9.42" velocity="15"/>-->
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>

  <transmission name="left_back_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_back_wheel_joint">
      <EffortJointInterface>EffortJointInterface</EffortJointInterface>
    </joint>
    <actuator name="left_backMotor">
      <EffortJointInterface>EffortJointInterface</EffortJointInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>


  <link name="right_front_wheel">

    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.043" radius="0.14"/>
      </geometry>
    </collision>

    <visual>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://espeleo_description/urdf/stl/roda_esquerda.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>

    <inertial>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <mass value="0.32"/>
      <!--inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/-->
      <!--inertia ixx="0.00895020" ixy="-0.00001" ixz="-0.00000" iyy="0.00895023" iyz="-0.000000" izz=".01758982"/-->
      <inertia ixx="0.012411765597" ixy="0" ixz="0" iyy="0.015218160428" iyz="0" izz="0.011763977943"/>
    </inertial>
  </link>
  
  <joint name="right_front_wheel_joint" type="continuous"> <!--type="revolute">-->
    <parent link="chassis"/>
    <child link="right_front_wheel"/>
    <origin rpy="0 0 0" xyz="0.215 -0.175 -0.01"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <!--<limit command_effort="100" current="10" effort="80" gear_velocity="10" lower="-9.42" upper="9.42" velocity="15"/>-->
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>

  <transmission name="right_front_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_front_wheel_joint">
      <EffortJointInterface>EffortJointInterface</EffortJointInterface>
    </joint>
    <actuator name="right_frontMotor">
      <EffortJointInterface>EffortJointInterface</EffortJointInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>


  <link name="right_back_wheel">

    <collision>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.043" radius="0.14"/>
      </geometry>
    </collision>

    <visual>
      <origin rpy="0 0 3.14159265359" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://espeleo_description/urdf/stl/roda_esquerda.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>

    <inertial>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <mass value="0.32"/>
      <!--inertia ixx="0" ixy="0" ixz="0" iyy="0" iyz="0" izz="0"/-->
      <inertia ixx="0.012411765597" ixy="0" ixz="0" iyy="0.015218160428" iyz="0" izz="0.011763977943"/>
    </inertial>
  </link>
  
  <joint name="right_back_wheel_joint" type="continuous"> <!--type="revolute">-->
    <parent link="chassis"/>
    <child link="right_back_wheel"/>
    <origin rpy="0 0 0" xyz="-0.212 -0.175 -0.01"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <!--<limit command_effort="100" current="10" effort="80" gear_velocity="10" lower="-9.42" upper="9.42" velocity="15"/>-->
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>

  <transmission name="right_back_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_back_wheel_joint">
      <EffortJointInterface>EffortJointInterface</EffortJointInterface>
    </joint>
    <actuator name="right_backMotor">
      <EffortJointInterface>EffortJointInterface</EffortJointInterface>
      <mechanicalReduction>10</mechanicalReduction>
    </actuator>
  </transmission>


  <!-- sensor_tower -->


  <link name="sensor_tower">

    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.109"/>
      <geometry>
        <box size="0.19 0.19 0.18"/>
      </geometry>
    </collision>

    <visual>
      <origin rpy="1.57079632679 0 0" xyz="-0.08 0.2 0"/>
      <geometry>
        <mesh filename="package://espeleo_description/urdf/stl/Torre.STL" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="grey"/>
    </visual>

    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.2"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>

  <joint name="sensor_tower_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0 0 .055"/>
    <parent link="chassis"/>
    <child link="sensor_tower"/>
  </joint>

  <!-- Caso necessite utilizar a TF da IMU na torre altere o parent link para (<parent link="chassis"/>) e utilize as seguintes coordenadas de origin (<origin rpy="0 0 0" xyz="-0.025 -0.015 .087"/>) -->


  <!-- Imu --> 

  <link name="imu_link">
    <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="0.05"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      </inertial>
    </link>

  <joint name="imu_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.1275 -0.0175 0.0445"/> 
    <parent link="chassis"/>
    <child link="imu_link"/>
  </joint>
  

  <!-- Laser Lidar
  

  <link name="os1_sensor">

    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.045"/>
      <geometry>
        <box size="0.13 0.13 0.095"/>
      </geometry>
    </collision>

    <visual>
      <origin rpy="1.57079632679 0 1.57079632679" xyz="-0.09 -0.054 -0.01"/>
      <geometry>
        <mesh filename="package://espeleo_description/urdf/stl/Lidar.STL" scale="0.001 0.001 0.001"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="0.5"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      </inertial>
    </link>

  <joint name="laser_joint" type="fixed">
    <axis xyz="0 0 0"/>
    <origin rpy="0 0 0" xyz="0 0 .205"/>
    <parent link="sensor_tower"/>
    <child link="os1_sensor"/>
  </joint> -->

<!--velodyne-->
  
  <joint name="velodyne_base_mount_joint" type="fixed">
      <axis xyz="0 0 0"/>
      <origin rpy="0 0 0" xyz="0 0 .205"/>
      <parent link="sensor_tower"/>
      <child link="velodyne_base_link"/>
  </joint>

  <link name="velodyne_base_link">
      <inertial>
        <mass value="0.83"/>
        <origin xyz="0 0 0.03585"/>
        <inertia ixx="0.0009" ixy="0" ixz="0"
          iyy="0.0009" iyz="0"
          izz="0.0011"/>
      </inertial>

      <collision>
        <origin rpy="0 0 0" xyz="0 0 0.045"/>
        <geometry>
          <box size="0.13 0.13 0.095"/>
        </geometry>
      </collision>

      <visual>
        <origin rpy="1.57079632679 0 1.57079632679" xyz="-0.09 -0.054 -0.01"/>
        <geometry>
          <mesh filename="package://espeleo_gazebo/urdf/stl/Lidar.STL" scale="0.001 0.001 0.001"/>
        </geometry>
        <material name="orange"/>
      </visual>
    </link>

    <joint name="velodyne_base_scan_joint" type="fixed" >
      <origin xyz="0 0 0.0377" rpy="0 0 0" />
      <parent link="velodyne_base_link" />
      <child link="velodyne"/>
    </joint>

    <link name="velodyne">
      <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
      </inertial>

    </link>

   

  <!-- hokuyo -->
  

  <link name="hokuyo">

    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.045"/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
    </collision>

    <visual>
      <origin rpy="0 0 0" xyz="0. 0. 0."/>
      <geometry>
        <box size="0.01 0.01 0.01"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="0.5"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      </inertial>
  </link>

  <joint name="laser2_joint" type="fixed">
    <axis xyz="0 0 0"/>
    <origin rpy="0 0 0" xyz="0 0 .305"/>
    <parent link="sensor_tower"/>
    <child link="hokuyo"/>
  </joint>


  <!-- Cameras --> 

  <link name="front_camera">
    <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="0.05"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.265 0 0.03"/> 
    <parent link="chassis"/>
    <child link="front_camera"/>
  </joint>

  <link name="back_camera">
    <inertial>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <mass value="0.05"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      </inertial>
  </link>

  <joint name="camera2_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 3.14" xyz="-0.265 0 0.03"/> 
    <parent link="chassis"/>
    <child link="back_camera"/>
  </joint>




  <!-- Camera D435i simulada -->
  

  <!---->
  <link name="d435i_sim_link">
    <visual>
        <origin rpy="1.57 0 1.57" xyz="0 -0.04 -0.01"/>
        <geometry>
          <mesh filename="package://espeleo_gazebo/urdf/stl/realsense_d435.STL" scale="0.001 0.001 0.001"/>
        </geometry>
    </visual>
  
  <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    </link>
  
  <joint name="realsense_d435_sim_joint" type="fixed">
    <axis xyz="0 0 0"/>
     <origin rpy="0 0 0" xyz="0.06 0 0.18"/> 
    <parent link="sensor_tower"/>
    <child link="d435i_sim_link"/>
  </joint>
  
  <link name="d435i_pt_link">
  
  <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.01"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    </link>
  
  <joint name="realsense_d435_pt_joint" type="fixed">
    <axis xyz="0 0 0"/>
     <origin rpy="-1.57 0 -1.57" xyz="0 0 0"/> 
    <parent link="d435i_sim_link"/>
    <child link="d435i_pt_link"/>
  </joint>

  <!-- Gazebo Configurations-->

  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>
  

  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <updateRate>100.0</updateRate>
      <robotNamespace>/</robotNamespace>
      <leftFrontJoint>left_front_wheel_joint</leftFrontJoint>
      <rightFrontJoint>right_front_wheel_joint</rightFrontJoint>
      <leftRearJoint>left_back_wheel_joint</leftRearJoint>
      <rightRearJoint>right_back_wheel_joint</rightRearJoint>
      <wheelSeparation>0.35</wheelSeparation>
      <wheelDiameter>0.28</wheelDiameter>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>,
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <wheelAcceleration>0</wheelAcceleration>
      <torque>500</torque>
      <topicName>cmd_vel</topicName>
      <broadcastTF>true</broadcastTF>
    </plugin>
  </gazebo>

 

  <gazebo reference="back_camera">
    <sensor type="camera" name="camera2">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
           <!--Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>espeleo/camera2</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>back_camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="front_camera">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
           <!--Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>espeleo/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>front_camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

 <!-- Gazebo requires the velodyne_gazebo_plugins package -->
  <gazebo reference="velodyne">
        <!-- If use GPU-->
        <!--<sensor type="gpu_ray" name="$velodyne-VLP16">
          <pose>0 0 0 0 0 0</pose>
          <visualize>false</visualize>
          <update_rate>10</update_rate>
          <ray>
            <scan>
              <horizontal>
                <samples>440</samples>
                <resolution>1</resolution>
                <min_angle>-3.1415</min_angle>
                <max_angle>3.1415</max_angle>
              </horizontal>
              <vertical>
                <samples>16</samples>
                <resolution>1</resolution>
                <min_angle>-0.2618</min_angle>
                <max_angle>0.2618</max_angle>
              </vertical>
            </scan>
            <range>
              <min>0.3</min>
              <max>131</max>
              <resolution>0.001</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.0</stddev>
            </noise>
          </ray>
          <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so">
            <topicName>/velodyne_points</topicName>
            <frameName>velodyne</frameName>
            <organize_cloud>false</organize_cloud>
            <min_range>-3.1415</min_range>
            <max_range>3.1415</max_range>
            <gaussianNoise>0.008</gaussianNoise>
          </plugin>
        </sensor>-->
      <!--If unless GPU-->

    <sensor type="ray" name="velodyne-VLP16">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>440</samples>
            <resolution>1</resolution>
            <min_angle>-3.1415</min_angle>
            <max_angle>3.1415</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.2618</min_angle>
            <max_angle> 0.2618</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>261</max>
          <resolution>0.001</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.0</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
        <topicName>/velodyne_points</topicName>
        <frameName>velodyne</frameName>
        <organize_cloud>false</organize_cloud>
        <min_range>-3.1415</min_range>
        <max_range>3.1415</max_range>
        <gaussianNoise>0.008</gaussianNoise>
      </plugin>
    </sensor>

    </gazebo>

  <gazebo reference="camera_depth">
    <sensor type="camera3" name="camera3">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
           <!--Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>espeleo/camera3</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_depth</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="d435i_sim_link">
    <sensor name="d435i_sim_link_camera" type="depth">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="d435i_sim_link_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>espeleo/camera3_ir</cameraName>
        <imageTopicName>/espeleo/camera3/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/espeleo/camera3/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/espeleo/camera3/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/espeleo/camera3/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/espeleo/camera3/depth/points</pointCloudTopicName>
        <frameName>d435i_pt_link</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- hokuyo if need uncomment-->
  <gazebo reference="hokuyo">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3.1415</min_angle>
            <max_angle>3.1415</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.20</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser

                achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and

                stddev of 0.01m will put 99.7% of samples within 0.03m of the true
                reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/espeleo/laser/scan</topicName>
        <frameName>os1_sensor</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>base_link</bodyName>
      <topicName>imu_link</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>20.0</updateRate>
    </plugin>
  </gazebo>


  <!-- Important Links
    http://www.ode.org/
    http://gazebosim.org/tutorials?cat=guided_i&tut=guided_i2
    http://gazebosim.org/tutorials/?tut=ros_urdf
    http://gazebosim.org/tutorials?tut=ros_gzplugins
    http://gazebosim.org/tutorials?tut=physics_params&cat=physics#ParametersApplicabletoAllPhysicsEngines
  -->

  <gazebo reference="left_front_wheel">
    <mu1 value="3"/>
    <mu2 value="3"/>
    <kp value="1000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="0 0 1"/>
    <minDepth>0.001</minDepth>
    <maxContacts>10</maxContacts>
    <maxVel>1.0</maxVel>
    <material>Gazebo/DarkGrey</material>
  </gazebo>


  <gazebo reference="left_back_wheel">
    <mu1 value="3"/>
    <mu2 value="3"/>
    <kp value="1000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="0 0 1"/>
    <minDepth>0.001</minDepth>
    <maxContacts>10</maxContacts>
    <maxVel>1.0</maxVel>
    <material>Gazebo/DarkGrey</material>
  </gazebo>


  <gazebo reference="right_front_wheel">
    <mu1 value="3"/>
    <mu2 value="3"/>
    <kp value="1000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="0 0 1"/>
    <minDepth>0.001</minDepth>
    <maxContacts>10</maxContacts>
    <maxVel>1.0</maxVel>
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="right_back_wheel">
    <mu1 value="3"/>
    <mu2 value="3"/>
    <kp value="1000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="0 0 1"/>
    <minDepth>0.001</minDepth>
    <maxContacts>10</maxContacts>
    <maxVel>1.0</maxVel>
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="sensor_tower">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="os1_sensor">
    <material>Gazebo/Grey</material>
  </gazebo>

</robot>
